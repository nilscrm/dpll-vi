
pub mod dpll = "./dpll.vi";

use dpll::cnf::parse_cnf;

pub fn main(&io: &IO) {
  let Ok(formula) = parse_cnf(&io) else match {
    Err(err) {
      io.println("Error: {err}");
      return;
    }
  };

  match formula.solve() {
    Some(solution) {
      io.println("satisfiable");
      io.println("evaluation under model: {formula.evaluate(&solution).show()}");
      for (var, value) in solution!.into_iter() {
        io.println("var {var} = {value}");
      }
    }
    None {
      io.println("unsatisfiable");
    }
  }
}
